# Azure DevOps pipeline definition
trigger:
  branches:
    include:
      - main

variables:
  imageName: 'mycontainerapp'
  acrName: 'myacr.azurecr.io'
  tag: '$(Build.BuildId)'
  helmChartPath: './k8s'

stages:

# ====================
# CI - Build & Test
# ====================
- stage: Build
  jobs:
  - job: BuildAndScan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Checkout@1

    - task: UseDotNet@2  # if .NET
      inputs:
        packageType: 'sdk'
        version: '6.x.x'

    - script: |
        echo "Running Unit Tests"
        dotnet test
      displayName: 'Run Unit Tests'

    - script: |
        echo "Building Docker image"
        docker build -t $(acrName)/$(imageName):$(tag) .
      displayName: 'Docker Build'

    - script: |
        echo "Running Trivy Scan"
        trivy image --severity CRITICAL,HIGH --exit-code 1 $(acrName)/$(imageName):$(tag)
      displayName: 'Trivy Security Scan'

    - task: Docker@2
      inputs:
        containerRegistry: 'MyACRServiceConnection'
        repository: '$(imageName)'
        command: 'push'
        tags: |
          $(tag)

# ====================
# CD - Deploy
# ====================
- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToAKS
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'MyAzureServiceConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying to AKS"
                kubectl set image deployment/my-deployment my-container=$(acrName)/$(imageName):$(tag)